import React, { useState, useEffect, useRef } from 'react';

interface AIAssistantProps {
  isOpen: boolean;
  onClose: () => void;
  currentSheet: string;
  currentCell: { row: number; col: number; value: string };
  onApplySuggestion: (suggestion: string) => void;
  onAddRow?: (rowData: string[]) => void;
}

interface QuickAction {
  id: string;
  title: string;
  description: string;
  icon: string;
  action: () => void;
}

const AIFinancialAssistant: React.FC<AIAssistantProps> = ({
  isOpen,
  onClose,
  currentSheet,
  currentCell,
  onApplySuggestion,
  onAddRow
}) => {
  const [activeTab, setActiveTab] = useState<'quick' | 'chat'>('quick');
  const [newRowName, setNewRowName] = useState('');
  const [newRowValue, setNewRowValue] = useState('');
  const [chatQuery, setChatQuery] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [chatHistory, setChatHistory] = useState<Array<{ role: 'user' | 'assistant'; content: string }>>([]);

  // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ª–∏—Å—Ç–∞
  const getQuickActions = (): QuickAction[] => {
    // –û—Ç—Ä–∞—Å–ª–µ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã —Å—Ç–∞—Ç–µ–π
    const industryTemplates = {
      'medical-clinic': {
        revenue: ['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤—Ä–∞—á–µ–π', '–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏', '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã', '–£–ó–ò –∏ —Ä–µ–Ω—Ç–≥–µ–Ω', '–ü—Ä–æ—Ü–µ–¥—É—Ä—ã –∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏'],
        expenses: ['–ó–∞—Ä–ø–ª–∞—Ç–∞ –º–µ–¥–ø–µ—Ä—Å–æ–Ω–∞–ª–∞', '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏', '–ê–º–æ—Ä—Ç–∏–∑–∞—Ü–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è', '–õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ', '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ']
      },
      'education-courses': {
        revenue: ['–û–Ω–ª–∞–π–Ω –∫—É—Ä—Å—ã', '–û—á–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è'],
        expenses: ['–ó–∞—Ä–ø–ª–∞—Ç–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π', '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞', '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', '–£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã']
      },
      'logistics-delivery': {
        revenue: ['–ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞', '–≠–∫—Å–ø—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∞', '–°–∫–ª–∞–¥—Å–∫–∏–µ —É—Å–ª—É–≥–∏', '–£–ø–∞–∫–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤', '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –≥—Ä—É–∑–æ–≤'],
        expenses: ['–¢–æ–ø–ª–∏–≤–æ –∏ –ì–°–ú', '–ó–∞—Ä–ø–ª–∞—Ç–∞ –≤–æ–¥–∏—Ç–µ–ª–µ–π', '–ê—Ä–µ–Ω–¥–∞ —Å–∫–ª–∞–¥–æ–≤', '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–ø–∞—Ä–∫–∞', '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞']
      },
      'tourism-hotel': {
        revenue: ['–ü—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –≤ –Ω–æ–º–µ—Ä–∞—Ö', '–†–µ—Å—Ç–æ—Ä–∞–Ω –∏ –±–∞—Ä', '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-—É—Å–ª—É–≥–∏', 'SPA –∏ —Ñ–∏—Ç–Ω–µ—Å', '–≠–∫—Å–∫—É—Ä—Å–∏–æ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏'],
        expenses: ['–ü–µ—Ä—Å–æ–Ω–∞–ª –æ—Ç–µ–ª—è', '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏', '–£–±–æ—Ä–∫–∞ –∏ –ø—Ä–∞—á–µ—á–Ω–∞—è', '–ó–∞–≤—Ç—Ä–∞–∫–∏ –∏ –ø–∏—Ç–∞–Ω–∏–µ', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ —Ä–µ–∫–ª–∞–º–∞']
      },
      'auto-service': {
        revenue: ['–¢–û –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', '–†–µ–º–æ–Ω—Ç –¥–≤–∏–≥–∞—Ç–µ–ª—è', '–†–µ–º–æ–Ω—Ç —Ö–æ–¥–æ–≤–æ–π', '–ö—É–∑–æ–≤–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂'],
        expenses: ['–ó–∞–ø—á–∞—Å—Ç–∏ –∏ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏', '–ó–∞—Ä–ø–ª–∞—Ç–∞ –º–µ—Ö–∞–Ω–∏–∫–æ–≤', '–ê—Ä–µ–Ω–¥–∞ –±–æ–∫—Å–∞', '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', '–£—Ç–∏–ª–∏–∑–∞—Ü–∏—è –æ—Ç—Ö–æ–¥–æ–≤']
      },
      'beauty-salon': {
        revenue: ['–°—Ç—Ä–∏–∂–∫–∏ –∏ —É–∫–ª–∞–¥–∫–∏', '–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –≤–æ–ª–æ—Å', '–ú–∞–Ω–∏–∫—é—Ä –∏ –ø–µ–¥–∏–∫—é—Ä', '–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è', '–ú–∞—Å—Å–∞–∂'],
        expenses: ['–ó–∞—Ä–ø–ª–∞—Ç–∞ –º–∞—Å—Ç–µ—Ä–æ–≤', '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞', '–ê—Ä–µ–Ω–¥–∞ –∫—Ä–µ—Å–µ–ª', '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏']
      },
      'coffee-shop': {
        revenue: ['–ö–æ—Ñ–µ –∏ –Ω–∞–ø–∏—Ç–∫–∏', '–í—ã–ø–µ—á–∫–∞ –∏ –¥–µ—Å–µ—Ä—Ç—ã', '–ó–∞–≤—Ç—Ä–∞–∫–∏ –∏ –æ–±–µ–¥—ã', '–ü—Ä–æ–¥–∞–∂–∞ –∑–µ—Ä–Ω–∞', '–ö–µ–π—Ç–µ—Ä–∏–Ω–≥'],
        expenses: ['–ü—Ä–æ–¥—É–∫—Ç—ã –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã', '–ó–∞—Ä–ø–ª–∞—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞', '–ê—Ä–µ–Ω–¥–∞ –ø–æ–º–µ—â–µ–Ω–∏—è', '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏', '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∫–∞—Ñ–µ']
      }
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –æ—Ç—Ä–∞—Å–ª—å –ø–æ currentSheet –∏–ª–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä
    const getIndustryItems = (type: 'revenue' | 'expenses') => {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—Ç—Ä–∞—Å–ª—å –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–æ–¥–µ–ª–∏
      // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–µ —à–∞–±–ª–æ–Ω—ã
      if (currentSheet === 'revenue' && type === 'revenue') {
        return ['–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏', '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏', '–ê–±–æ–Ω–µ–Ω—Ç—Å–∫–∞—è –ø–ª–∞—Ç–∞', '–ö–æ–º–∏—Å—Å–∏–æ–Ω–Ω—ã–µ –¥–æ—Ö–æ–¥—ã', '–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã'];
      }
      if (currentSheet === 'expenses' && type === 'expenses') {
        return ['–ê—Ä–µ–Ω–¥–∞ –ø–æ–º–µ—â–µ–Ω–∏—è', '–ó–∞—Ä–ø–ª–∞—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ —Ä–µ–∫–ª–∞–º–∞', '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏', '–ê–º–æ—Ä—Ç–∏–∑–∞—Ü–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'];
      }
      return [];
    };

    switch (currentSheet) {
      case 'assumptions':
        return [
          {
            id: 'tax_rate',
            title: '–ù–∞–ª–æ–≥–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –ö–ü–ù',
            description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 20% –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ',
            icon: 'üìä',
            action: () => onApplySuggestion('20%')
          },
          {
            id: 'wacc',
            title: 'WACC –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
            description: '–¢–∏–ø–∏—á–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –¥–∏—Å–∫–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è 18%',
            icon: 'üíπ',
            action: () => onApplySuggestion('18%')
          },
          {
            id: 'growth',
            title: '–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π —Ä–æ—Å—Ç',
            description: '–£–º–µ—Ä–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç 15% –≤ –≥–æ–¥',
            icon: 'üìà',
            action: () => onApplySuggestion('15%')
          },
          {
            id: 'auto_fill_assumptions',
            title: '–ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–æ–∫',
            description: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–∏–ø–∏—á–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –¥–ª—è –æ—Ç—Ä–∞—Å–ª–∏',
            icon: '‚ö°',
            action: () => {
              // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–µ–¥–ø–æ—Å—ã–ª–æ–∫ —Å—Ä–∞–∑—É
              const assumptions = [
                '–ù–∞–ª–æ–≥–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞: 20%',
                '–¢–µ–º–ø —Ä–æ—Å—Ç–∞: 15%', 
                'WACC: 18%',
                '–ò–Ω—Ñ–ª—è—Ü–∏—è: 7%'
              ];
              onApplySuggestion(assumptions.join('\n'));
            }
          }
        ];

      case 'revenue':
        const revenueItems = getIndustryItems('revenue');
        return [
          {
            id: 'add_revenue_source',
            title: '–î–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞',
            description: '–ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ—Ö–æ–¥–æ–≤',
            icon: '‚ûï',
            action: () => setActiveTab('chat')
          },
          {
            id: 'revenue_formula',
            title: '–§–æ—Ä–º—É–ª–∞ –≤—ã—Ä—É—á–∫–∏',
            description: '–ö–ª–∏–µ–Ω—Ç—ã √ó –°—Ä–µ–¥–Ω–∏–π —á–µ–∫ √ó –ß–∞—Å—Ç–æ—Ç–∞',
            icon: 'üìê',
            action: () => onApplySuggestion('=B2*C2*D2')
          },
          {
            id: 'growth_formula',
            title: '–†–æ—Å—Ç –≤—ã—Ä—É—á–∫–∏',
            description: '–†–æ—Å—Ç 15% –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –≥–æ–¥—É',
            icon: '‚¨ÜÔ∏è',
            action: () => onApplySuggestion('=B2*1.15')
          },
          ...revenueItems.slice(0, 3).map((item, index) => ({
            id: `quick_revenue_${index}`,
            title: `–î–æ–±–∞–≤–∏—Ç—å: ${item}`,
            description: '–¢–∏–ø–∏—á–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞ –¥–ª—è –æ—Ç—Ä–∞—Å–ª–∏',
            icon: 'üíö',
            action: () => {
              if (onAddRow) {
                onAddRow([item, '0', '0', '0']);
              }
            }
          }))
        ];

      case 'expenses':
        const expenseItems = getIndustryItems('expenses');
        return [
          {
            id: 'add_expense',
            title: '–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é —Ä–∞—Å—Ö–æ–¥–æ–≤',
            description: '–ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤',
            icon: '‚ûï',
            action: () => setActiveTab('chat')
          },
          {
            id: 'percent_expense',
            title: '–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –≤—ã—Ä—É—á–∫–∏',
            description: '–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã –≤ % –æ—Ç –ø—Ä–æ–¥–∞–∂',
            icon: 'üìä',
            action: () => onApplySuggestion('=revenue!B6*0.05')
          },
          {
            id: 'sum_formula',
            title: '–°—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤',
            description: '–°—É–º–º–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω —è—á–µ–µ–∫',
            icon: 'üßÆ',
            action: () => onApplySuggestion('=SUM(B2:B10)')
          },
          ...expenseItems.slice(0, 3).map((item, index) => ({
            id: `quick_expense_${index}`,
            title: `–î–æ–±–∞–≤–∏—Ç—å: ${item}`,
            description: '–¢–∏–ø–∏—á–Ω–∞—è —Å—Ç–∞—Ç—å—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –¥–ª—è –æ—Ç—Ä–∞—Å–ª–∏',
            icon: 'üí∏',
            action: () => {
              if (onAddRow) {
                onAddRow([item, '0', '0', '0']);
              }
            }
          }))
        ];

      case 'pnl':
        return [
          {
            id: 'ebitda',
            title: 'EBITDA',
            description: '–í—ã—Ä—É—á–∫–∞ –º–∏–Ω—É—Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã',
            icon: 'üí∞',
            action: () => onApplySuggestion('=B2-B3')
          },
          {
            id: 'tax_calc',
            title: '–†–∞—Å—á–µ—Ç –Ω–∞–ª–æ–≥–æ–≤',
            description: '–ù–∞–ª–æ–≥ —Å –ø—Ä–∏–±—ã–ª–∏ –¥–æ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è',
            icon: 'üìã',
            action: () => onApplySuggestion('=B6*assumptions!B2')
          },
          {
            id: 'margin',
            title: '–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å',
            description: '–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å / –í—ã—Ä—É—á–∫–∞',
            icon: 'üìà',
            action: () => onApplySuggestion('=B8/B2')
          },
          {
            id: 'break_even',
            title: '–¢–æ—á–∫–∞ –±–µ–∑—É–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏',
            description: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Ä—É—á–∫–∞ –¥–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è –∑–∞—Ç—Ä–∞—Ç',
            icon: '‚öñÔ∏è',
            action: () => onApplySuggestion('=expenses!B8')
          }
        ];

      default:
        return [
          {
            id: 'help',
            title: '–ü–æ–º–æ—â—å',
            description: '–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫',
            icon: 'üí°',
            action: () => {}
          }
        ];
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
  const handleAddRow = () => {
    if (!newRowName.trim()) return;
    
    const rowData = [newRowName, newRowValue || '0', '0', '0'];
    if (onAddRow) {
      onAddRow(rowData);
    }
    
    setNewRowName('');
    setNewRowValue('');
    setActiveTab('quick');
  };

  // –ü—Ä–æ—Å—Ç–æ–π —á–∞—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
  const handleChatSubmit = async () => {
    if (!chatQuery.trim()) return;
    
    setIsLoading(true);
    setChatHistory(prev => [...prev, { role: 'user', content: chatQuery }]);
    
    // –ü—Ä–æ—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã –±–µ–∑ API
    let response = '';
    const query = chatQuery.toLowerCase();
    
    if (query.includes('—Ñ–æ—Ä–º—É–ª–∞') || query.includes('—Ä–∞—Å—á–µ—Ç')) {
      response = `–î–ª—è –ª–∏—Å—Ç–∞ "${currentSheet}" —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—É–ª—ã:
      
‚Ä¢ –°—Å—ã–ª–∫–∞ –Ω–∞ –¥—Ä—É–≥–æ–π –ª–∏—Å—Ç: =sheetname!A1
‚Ä¢ –°—É–º–º–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞: =SUM(A1:A10) 
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç: =A1*0.15
‚Ä¢ –†–æ—Å—Ç: =A1*1.15`;
    } else if (query.includes('–¥–æ–±–∞–≤–∏—Ç—å') || query.includes('—Å—Ç–∞—Ç—å—è')) {
      response = `–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é ${currentSheet === 'revenue' ? '–¥–æ—Ö–æ–¥–∞' : '—Ä–∞—Å—Ö–æ–¥–æ–≤'}:

1. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
2. –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∏–ª–∏ —Ñ–æ—Ä–º—É–ª—É
3. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É"

–ü—Ä–∏–º–µ—Ä—ã —Å—Ç–∞—Ç–µ–π:
${currentSheet === 'revenue' 
  ? '‚Ä¢ –ü—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤\n‚Ä¢ –û–∫–∞–∑–∞–Ω–∏–µ —É—Å–ª—É–≥\n‚Ä¢ –ö–æ–º–∏—Å—Å–∏–æ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥' 
  : '‚Ä¢ –ê—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞\n‚Ä¢ –ó–∞—Ä–ø–ª–∞—Ç–∞\n‚Ä¢ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥\n‚Ä¢ –ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏'}`;
    } else if (query.includes('–ø—Ä–æ—Ü–µ–Ω—Ç') || query.includes('%')) {
      response = `–¢–∏–ø–∏—á–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞:

‚Ä¢ –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å: 30-60% –æ—Ç –≤—ã—Ä—É—á–∫–∏
‚Ä¢ –ó–∞—Ä–ø–ª–∞—Ç—ã: 15-30% –æ—Ç –≤—ã—Ä—É—á–∫–∏  
‚Ä¢ –ê—Ä–µ–Ω–¥–∞: 5-15% –æ—Ç –≤—ã—Ä—É—á–∫–∏
‚Ä¢ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: 2-10% –æ—Ç –≤—ã—Ä—É—á–∫–∏
‚Ä¢ –ù–∞–ª–æ–≥ –Ω–∞ –ø—Ä–∏–±—ã–ª—å: 20% –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ`;
    } else {
      response = `–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –º–æ–¥–µ–ª—å—é! 

–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:
‚Ä¢ "–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é —Ä–∞—Å—Ö–æ–¥–æ–≤?"
‚Ä¢ "–ö–∞–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?"
‚Ä¢ "–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –≤—ã—Ä—É—á–∫–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π?"

–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –≤–∫–ª–∞–¥–∫–µ "–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è".`;
    }
    
    setChatHistory(prev => [...prev, { role: 'assistant', content: response }]);
    setChatQuery('');
    setIsLoading(false);
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-2xl h-[600px] flex flex-col">
        {/* Header */}
        <div className="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4 rounded-t-xl">
          <div className="flex justify-between items-center">
            <div>
              <h2 className="text-xl font-bold">ü§ñ –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º</h2>
              <p className="text-blue-100 text-sm">
                –õ–∏—Å—Ç: {currentSheet} ‚Ä¢ –Ø—á–µ–π–∫–∞: {String.fromCharCode(65 + currentCell.col)}{currentCell.row + 1}
              </p>
            </div>
            <button
              onClick={onClose}
              className="text-white hover:bg-white hover:bg-opacity-20 rounded-full p-2 transition"
            >
              ‚úï
            </button>
          </div>
        </div>

        {/* Tab Navigation */}
        <div className="border-b border-gray-200 dark:border-gray-700">
          <nav className="flex">
            <button
              onClick={() => setActiveTab('quick')}
              className={`px-6 py-3 text-sm font-medium border-b-2 transition ${
                activeTab === 'quick'
                  ? 'border-blue-500 text-blue-600 dark:text-blue-400'
                  : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400'
              }`}
            >
              ‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            </button>
            <button
              onClick={() => setActiveTab('chat')}
              className={`px-6 py-3 text-sm font-medium border-b-2 transition ${
                activeTab === 'chat'
                  ? 'border-blue-500 text-blue-600 dark:text-blue-400'
                  : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400'
              }`}
            >
              üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
            </button>
          </nav>
        </div>

        {/* Content */}
        <div className="flex-1 overflow-hidden p-4">
          {activeTab === 'quick' && (
            <div className="space-y-3">
              <h3 className="font-semibold text-gray-900 dark:text-white mb-4">
                –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ª–∏—Å—Ç–∞ "{currentSheet}"
              </h3>
              
              {getQuickActions().map(action => (
                <button
                  key={action.id}
                  onClick={action.action}
                  className="w-full text-left p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition"
                >
                  <div className="flex items-center space-x-3">
                    <span className="text-2xl">{action.icon}</span>
                    <div>
                      <div className="font-medium text-gray-900 dark:text-white">{action.title}</div>
                      <div className="text-sm text-gray-600 dark:text-gray-300">{action.description}</div>
                    </div>
                  </div>
                </button>
              ))}

              {/* –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ */}
              {(currentSheet === 'revenue' || currentSheet === 'expenses') && (
                <div className="mt-6 p-4 border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg">
                  <h4 className="font-medium text-gray-900 dark:text-white mb-3">
                    ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é {currentSheet === 'revenue' ? '–¥–æ—Ö–æ–¥–∞' : '—Ä–∞—Å—Ö–æ–¥–æ–≤'}
                  </h4>
                  <div className="space-y-3">
                    <input
                      type="text"
                      value={newRowName}
                      onChange={(e) => setNewRowName(e.target.value)}
                      placeholder={`–ù–∞–∑–≤–∞–Ω–∏–µ ${currentSheet === 'revenue' ? '–¥–æ—Ö–æ–¥–∞' : '—Ä–∞—Å—Ö–æ–¥–∞'}`}
                      className="w-full p-2 border border-gray-300 dark:border-gray-600 rounded dark:bg-gray-700 dark:text-white"
                    />
                    <input
                      type="text"
                      value={newRowValue}
                      onChange={(e) => setNewRowValue(e.target.value)}
                      placeholder="–°—É–º–º–∞ –∏–ª–∏ —Ñ–æ—Ä–º—É–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100000 –∏–ª–∏ =A1*0.1)"
                      className="w-full p-2 border border-gray-300 dark:border-gray-600 rounded dark:bg-gray-700 dark:text-white"
                    />
                    <button
                      onClick={handleAddRow}
                      disabled={!newRowName.trim()}
                      className="w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition"
                    >
                      –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É
                    </button>
                  </div>
                </div>
              )}
            </div>
          )}

          {activeTab === 'chat' && (
            <div className="h-full flex flex-col">
              <div className="flex-1 overflow-y-auto space-y-3 mb-4">
                {chatHistory.length === 0 && (
                  <div className="text-center text-gray-500 dark:text-gray-400 py-8">
                    <div className="text-4xl mb-4">üí¨</div>
                    <p>–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –º–æ–¥–µ–ª–∏</p>
                    <p className="text-sm mt-2">–ù–∞–ø—Ä–∏–º–µ—Ä: "–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é —Ä–∞—Å—Ö–æ–¥–æ–≤?" –∏–ª–∏ "–ö–∞–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?"</p>
                  </div>
                )}
                
                {chatHistory.map((msg, idx) => (
                  <div key={idx} className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}>
                    <div className={`max-w-[80%] p-3 rounded-lg whitespace-pre-line ${
                      msg.role === 'user' 
                        ? 'bg-blue-600 text-white rounded-br-none' 
                        : 'bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white rounded-bl-none'
                    }`}>
                      {msg.content}
                    </div>
                  </div>
                ))}
                
                {isLoading && (
                  <div className="flex justify-start">
                    <div className="bg-gray-100 dark:bg-gray-700 p-3 rounded-lg">
                      <div className="flex space-x-1">
                        <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                        <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
                        <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
                      </div>
                    </div>
                  </div>
                )}
              </div>
              
              <div className="flex space-x-2">
                <input
                  type="text"
                  value={chatQuery}
                  onChange={(e) => setChatQuery(e.target.value)}
                  onKeyPress={(e) => e.key === 'Enter' && handleChatSubmit()}
                  placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å..."
                  className="flex-1 p-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
                  disabled={isLoading}
                />
                <button
                  onClick={handleChatSubmit}
                  disabled={isLoading || !chatQuery.trim()}
                  className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition"
                >
                  üì§
                </button>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default AIFinancialAssistant; 